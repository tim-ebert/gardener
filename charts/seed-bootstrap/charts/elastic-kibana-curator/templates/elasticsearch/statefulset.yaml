apiVersion: {{ include "statefulsetversion" . }}
kind: StatefulSet
metadata:
  name: elasticsearch-logging
  namespace: {{ .Release.Namespace }}
  labels:
    garden.sapcloud.io/role: logging
    app: elasticsearch-logging
    role: logging
spec:
  serviceName: elasticsearch-logging
  selector:
    matchLabels:
      app: elasticsearch-logging
      role: logging
  replicas: {{ .Values.elasticsearch.replicaCount }}
  template:
    metadata:
      annotations:
        checksum/es-configmap: {{ include (print $.Template.BasePath "/elasticsearch/configmap.yaml") . | sha256sum }}
        checksum/searchguard-config: {{ include (print $.Template.BasePath "/elasticsearch/searchguard-configmap.yaml") . | sha256sum }}
{{- if .Values.searchguard.annotations }}
        {{- toYaml .Values.searchguard.annotations | nindent 8 }}
{{- end }}
      labels:
        garden.sapcloud.io/role: logging
        app: elasticsearch-logging
        role: logging
        networking.gardener.cloud/from-prometheus: allowed
    spec:
      initContainers:
{{ include "init-containers" . | indent 6 }}
      containers:
      - name: elasticsearch-logging
{{- if .Values.searchguard.enabled }}
        image: {{ index .Values.global.images "elasticsearch-searchguard-oss" }}
        command:
        - /bin/sh
        - -c
        - rm -f /usr/share/elasticsearch/config/*.pem && /usr/local/bin/docker-entrypoint.sh
{{- else }}
        image: {{ index .Values.global.images "elasticsearch-oss" }}
{{- end }}
        imagePullPolicy: IfNotPresent
        env:
        - name: ES_JAVA_OPTS
          value: "-Xms{{ include "jvm.memory" .Values.elasticsearch }} -Xmx{{ include "jvm.memory" .Values.elasticsearch }}"
        - name: CLUSTER_NAME
          value: {{ .Release.Namespace }}-elasticsearch-logging
        - name: WRITE_QUEUE_SIZE
          value: "500"
        - name: INDEX_BUFFER_SIZE
          value: "512MB"
        - name: ALLOW_DISK_ALLOCATION
          value: "true"
        - name: DISK_WATERMARK_HIGHT
          value: "200MB"
        - name: DISK_WATERMARK_LOW
          value: "500MB"
        - name: DISK_WATERMARK_FLOOD_STAGE
          value: "200MB"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        resources:
{{- include "utils-templates.resource-quantity" .Values.elasticsearch | indent 10 }}
        ports:
        - containerPort: {{ .Values.global.elasticsearchPorts.db }}
          name: http
          protocol: TCP
        - containerPort: {{ .Values.global.elasticsearchPorts.transport }}
          name: transport
          protocol: TCP
        livenessProbe:
          {{- toYaml .Values.elasticsearch.livenessProbe | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: http
{{- if .Values.searchguard.enabled }}
            httpHeaders:
              - name: Authorization
                value: Basic {{ .Values.elasticsearch.readinessProbe.httpAuth }}
{{- end }}
          initialDelaySeconds: 20
          timeoutSeconds: 5
        volumeMounts:
        - name: elasticsearch-logging
          mountPath: /data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: config
          mountPath: /usr/share/elasticsearch/config/log4j2.properties
          subPath: log4j2.properties
        - name: config
          mountPath: /usr/share/elasticsearch/config/jvm.options
          subPath: jvm.options
{{- if .Values.searchguard.enabled }}
        - name: searchguard-config
          mountPath: /usr/share/elasticsearch/sgconfig/
        - name: tls-secrets-server
          mountPath: /usr/share/elasticsearch/config/certificates-secrets/server/
        - name: tls-secrets-client
          mountPath: /usr/share/elasticsearch/config/certificates-secrets/client/
{{- end }}
      - name: metrics-exporter
        image: {{ index .Values.global.images "elasticsearch-metrics-exporter" }}
        imagePullPolicy: IfNotPresent
        command: ["elasticsearch_exporter"]
        args:
{{- if .Values.searchguard.enabled }}
          - -es.uri=http://{{ .Values.elasticsearch.metricsExporter.username }}:{{ .Values.elasticsearch.metricsExporter.password }}@localhost:{{ .Values.global.elasticsearchPorts.db }}
{{- else }}
          - -es.uri=http://localhost:{{ .Values.global.elasticsearchPorts.db }}
{{- end }}
          - -es.all=true
          - -es.indices=true
          - -es.timeout=30s
          - -web.listen-address=:{{ .Values.global.elasticsearchPorts.metricsExporter }}
        securityContext:
          capabilities:
            {{- toYaml .Values.elasticsearch.metricsExporter.securityContext.capabilities | nindent 12 }}
          readOnlyRootFilesystem: true
        resources:
          {{- toYaml .Values.elasticsearch.metricsExporter.resources | nindent 10 }}
        ports:
          - containerPort: {{ .Values.global.elasticsearchPorts.metricsExporter }}
            name: metrics
            protocol: TCP
        livenessProbe:
          {{- toYaml .Values.elasticsearch.metricsExporter.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.elasticsearch.metricsExporter.readinessProbe | nindent 10 }}
      serviceAccountName: elasticsearch-logging
      volumes:
      - name: config
        configMap:
          name: es-configmap
{{- if .Values.searchguard.enabled }}
      - name: searchguard-config
        defaultMode: 0600
        configMap:
          name: searchguard-config
      - name: tls-secrets-server
        defaultMode: 0700
        secret:
          secretName: elasticsearch-logging-server
      - name: tls-secrets-client
        defaultMode: 0700
        secret:
          secretName: sg-admin-client
{{- end }}
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-logging
      labels:
        role: logging
    spec:
      accessModes:
      - {{ .Values.elasticsearch.persistence.accessMode }}
      resources:
        requests:
          storage: {{ .Values.elasticsearch.persistence.size }}
