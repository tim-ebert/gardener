apiVersion: {{ include "statefulsetversion" . }}
kind: StatefulSet
metadata:
  annotations:
    "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
  name: etcd-{{ .Values.role }}
  namespace: {{ .Release.Namespace }}
  labels:
    garden.sapcloud.io/role: controlplane
    app: etcd-statefulset
    role: {{ .Values.role }}
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: etcd-{{.Values.role}}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: etcd-statefulset
      role: {{ .Values.role }}
  template:
    metadata:
      annotations:
        checksum/configmap-etcd-bootstrap-config: {{ include (print $.Template.BasePath "/configmap-etcd-bootstrap.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        garden.sapcloud.io/role: controlplane
        app: etcd-statefulset
        role: {{ .Values.role }}
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-private-networks: allowed
    spec:
      priorityClassName: gardener-shoot-controlplane
      containers:
      - name: etcd
        image: {{ index .Values.images "etcd" }}
        imagePullPolicy: IfNotPresent
        command:
        - etcd
        - --config-file
        - /bootstrap/etcd.conf.yml
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - ETCDCTL_API=3
            - etcdctl
            - --cert=/var/etcd/ssl/client/tls.crt
            - --key=/var/etcd/ssl/client/tls.key
            - --cacert=/var/etcd/ssl/ca/ca.crt
            - --endpoints=https://etcd-{{ .Values.role }}-0:{{ .Values.servicePorts.client }}
            - endpoint
            - health
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - ETCDCTL_API=3
            - etcdctl
            - --cert=/var/etcd/ssl/client/tls.crt
            - --key=/var/etcd/ssl/client/tls.key
            - --cacert=/var/etcd/ssl/ca/ca.crt
            - --endpoints=https://etcd-{{ .Values.role }}-0:{{ .Values.servicePorts.client }}
            - get
            - foo
          initialDelaySeconds: 15
          periodSeconds: 5
        ports:
        - containerPort: {{ .Values.servicePorts.server }}
          name: serverport
          protocol: TCP
        - containerPort: {{ .Values.servicePorts.client }}
          name: clientport
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        {{- if .Values.etcdResources }}
        resources:
{{ toYaml .Values.etcdResources | indent 10 }}
        {{- end }}
        volumeMounts:
{{- if eq .Values.role "main" }}
        - name: {{ .Values.role }}-etcd
          mountPath: /var/etcd/data
{{- else }}
        - name: etcd-{{ .Values.role }}
          mountPath: /var/etcd/data
{{- end}}
        - name: etcd-bootstrap
          mountPath: /bootstrap
        - name: ca-etcd
          mountPath: /var/etcd/ssl/ca
        - name: etcd-server-tls
          mountPath: /var/etcd/ssl/server
        - name: etcd-client-tls
          mountPath: /var/etcd/ssl/client
      volumes:
      - name: etcd-bootstrap
        configMap:
          name: etcd-bootstrap-{{ .Values.role }}
          defaultMode: 356
      - name: etcd-server-tls
        secret:
          secretName: {{ .Values.tlsServerSecretName }}
      - name: etcd-client-tls
        secret:
          secretName: {{ .Values.tlsClientSecretName }}
      - name: ca-etcd
        secret:
          secretName: ca-etcd
  volumeClaimTemplates:
  - metadata:
{{- if eq .Values.role "main" }}
      name: {{ .Values.role }}-etcd
{{- else }}
      name: etcd-{{ .Values.role }}
{{- end }}
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: {{ .Values.storageCapacity }}